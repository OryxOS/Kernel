
gdt.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_D4arch5amd646memory3gdt10GdtPointer6__ctorMFNcPSQBvQBtQBqQBm13GdtDescriptorZSQCyQCwQCtQCpQCo>:
   0:	48 89 f8             	mov    %rdi,%rax
   3:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   7:	66 c7 07 07 00       	movw   $0x7,(%rdi)
   c:	c3                   	ret    
   d:	0f 1f 00             	nopl   (%rax)

0000000000000010 <_D4arch5amd646memory3gdt13GdtDescriptor6__ctorMFNctZSQBzQBxQBuQBqQBp>:
  10:	48 89 f8             	mov    %rdi,%rax
  13:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  19:	c6 47 04 00          	movb   $0x0,0x4(%rdi)
  1d:	c6 47 08 00          	movb   $0x0,0x8(%rdi)
  21:	66 89 77 06          	mov    %si,0x6(%rdi)
  25:	c3                   	ret    
  26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  2d:	00 00 00 

0000000000000030 <_D4arch5amd646memory3gdt7initGdtFZv>:
  30:	55                   	push   %rbp
  31:	48 89 e5             	mov    %rsp,%rbp
  34:	53                   	push   %rbx
  35:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 40 <_D4arch5amd646memory3gdt7initGdtFZv+0x10>
  3c:	00 00 00 00 
  40:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 4b <_D4arch5amd646memory3gdt7initGdtFZv+0x1b>
  47:	00 00 00 00 
  4b:	66 c7 05 00 00 00 00 	movw   $0x3098,0x0(%rip)        # 54 <_D4arch5amd646memory3gdt7initGdtFZv+0x24>
  52:	98 30 
  54:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 5e <_D4arch5amd646memory3gdt7initGdtFZv+0x2e>
  5b:	00 00 00 
  5e:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 68 <_D4arch5amd646memory3gdt7initGdtFZv+0x38>
  65:	00 00 00 
  68:	66 c7 05 00 00 00 00 	movw   $0x1080,0x0(%rip)        # 71 <_D4arch5amd646memory3gdt7initGdtFZv+0x41>
  6f:	80 10 
  71:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 78 <_D4arch5amd646memory3gdt7initGdtFZv+0x48>
  78:	0f 01 15 00 00 00 00 	lgdt   0x0(%rip)        # 7f <_D4arch5amd646memory3gdt7initGdtFZv+0x4f>
  7f:	48 89 e3             	mov    %rsp,%rbx
  82:	6a 10                	push   $0x10
  84:	53                   	push   %rbx
  85:	9c                   	pushf  
  86:	6a 08                	push   $0x8
  88:	48 8d 04 25 00 00 00 	lea    0x0,%rax
  8f:	00 
  90:	50                   	push   %rax
  91:	48 cf                	iretq  
  93:	66 b8 10 00          	mov    $0x10,%ax
  97:	8e d8                	mov    %eax,%ds
  99:	8e c0                	mov    %eax,%es
  9b:	8e e0                	mov    %eax,%fs
  9d:	8e e8                	mov    %eax,%gs
  9f:	5b                   	pop    %rbx
  a0:	5d                   	pop    %rbp
  a1:	c3                   	ret    

Disassembly of section .bss:

0000000000000000 <_D4arch5amd646memory3gdt10gdtEntriesG3SQBlQBjQBgQBc13GdtDescriptor>:
	...

Disassembly of section .data:

0000000000000000 <_D4arch5amd646memory3gdt10gdtPointerSQBjQBhQBeQBa10GdtPointer>:
   0:	07                   	(bad)  
	...

Disassembly of section .rodata:

0000000000000000 <_D4arch5amd646memory3gdt12CODE_SEGMENTyi>:
   0:	08 00                	or     %al,(%rax)
	...

0000000000000004 <_D4arch5amd646memory3gdt12DATA_SEGMENTyi>:
   4:	10 00                	adc    %al,(%rax)
	...

0000000000000008 <_D6object__T10RTInfoImplVAmA2i16i2ZQxyG2m>:
   8:	10 00                	adc    %al,(%rax)
   a:	00 00                	add    %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	02 00                	add    (%rax),%al
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 6c 64 63          	add    %ch,0x63(%rsp,%riz,2)
   4:	20 76 65             	and    %dh,0x65(%rsi)
   7:	72 73                	jb     7c <_D4arch5amd646memory3gdt7initGdtFZv+0x4c>
   9:	69 6f 6e 20 31 2e 32 	imul   $0x322e3120,0x6e(%rdi),%ebp
  10:	34 2e                	xor    $0x2e,%al
  12:	30 00                	xor    %al,(%rax)

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	0d 00 00 00 00       	or     $0x0,%eax
  29:	00 00                	add    %al,(%rax)
  2b:	00 10                	add    %dl,(%rax)
  2d:	00 00                	add    %al,(%rax)
  2f:	00 30                	add    %dh,(%rax)
  31:	00 00                	add    %al,(%rax)
  33:	00 00                	add    %al,(%rax)
  35:	00 00                	add    %al,(%rax)
  37:	00 16                	add    %dl,(%rsi)
  39:	00 00                	add    %al,(%rax)
  3b:	00 00                	add    %al,(%rax)
  3d:	00 00                	add    %al,(%rax)
  3f:	00 24 00             	add    %ah,(%rax,%rax,1)
  42:	00 00                	add    %al,(%rax)
  44:	44 00 00             	add    %r8b,(%rax)
  47:	00 00                	add    %al,(%rax)
  49:	00 00                	add    %al,(%rax)
  4b:	00 72 00             	add    %dh,0x0(%rdx)
  4e:	00 00                	add    %al,(%rax)
  50:	00 41 0e             	add    %al,0xe(%rcx)
  53:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  59:	41 83 03 02          	addl   $0x2,(%r11)
  5d:	6c                   	insb   (%dx),%es:(%rdi)
  5e:	0c 07                	or     $0x7,%al
  60:	08 00                	or     %al,(%rax)
  62:	00 00                	add    %al,(%rax)
  64:	00 00                	add    %al,(%rax)
	...
